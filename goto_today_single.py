import sublime
import sublime_plugin
import sublime
import datetime

# 2017-12-05
# New approach - had so many blank entries - particularly in project-
# specific journals - so now this creates a day header if one isn't there
# for the current day. So I plan to use this with an otherwise empty file
# so there won't be headers for empty days.
# 2017-10-19  
# Assumes single year journal page generated by new_year_single.py
# Clean up code - move function out from under class definition

class GotoTodaySingleCommand(sublime_plugin.TextCommand):
    newView = () # Global defined for pass to event handler if needed

    def run(self, edit):
        # root_dir is root of journal WRT project root. Assumes year
        # folders under root_dir
        settings = sublime.load_settings("GotoToday.sublime-settings")
        root_dir = settings.get('root_dir', "./")

        # Get the year as a string
        outStr = datetime.date.today().strftime("%Y")
       
        # Get project path and assemble /root_dir/year/year.md
        a = self.view.window().project_data().get('folders')
        b = a[0]['path']
        b = b.replace("\\", "/") + "/"
        outStr = b + root_dir + outStr+ "/" + outStr + ".md"

        # If this is a current view switch and center, otherwise load
        # the file and have the event handler center the view when loaded
        isView = self.view.window().find_open_file(outStr)
        if isView:
            self.view.window().focus_view(isView)
            GotoTodaySingleCommand.center_today(isView, edit)
        else:
            GotoTodaySingleCommand.newView = self.view.window().open_file(outStr)
            GotoTodaySingleCommand.center_today(GotoTodaySingleCommand.newView, edit)

    # See https://www.sublimetext.com/forum/viewtopic.php?f=6&t=14818
    # for use of "is_loading()"
    def center_today(view, edit):
        if not view.is_loading():
            a = "## " + datetime.date.today().strftime("%a %b %d")
            b = view.find(a, 0)
            if (b.a == -1) & (b.b == -1):
                sel_b = view.size()
                end = sel_b + view.insert(edit, sel_b, "\n\n" + a + "\n\n")
            else:
                view.show_at_center(b)
        else:
            # Half a second should be ample - above ref gives 10 ms
            sublime.set_timeout(lambda: GotoTodaySingleCommand.center_today(view), 500)
